{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/postReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","helpers/fetchToken.js","helpers/fetchTokenLess.js","helpers/imageUpload.js","actions/ui.js","actions/post.js","actions/auth.js","components/auth/LoginScreen.js","helpers/formRegisterValidator.js","helpers/emailValidator.js","components/auth/RegisterScreen.js","components/ui/aside/buttons/CreatePostButton.js","components/ui/aside/buttons/LogoutButton.js","components/ui/aside/myPost/MyPost.js","components/ui/aside/myPost/Posts.js","components/ui/aside/Aside.js","components/blog-creator/buttons/DeleteFab.js","components/blog-creator/buttons/Savebutton.js","components/blog-creator/buttons/FileUploadbutton.js","components/blog-creator/buttons/UpdateButton.js","components/blog-creator/buttons/ShowImgButton.js","components/blog-creator/buttons/PreviewButton.js","components/blog-creator/BlogEditor.js","components/blog-creator/NoContent.js","components/blog-creator/BlogCreator.js","components/ui/loading/LoadingScreen.js","components/router/PrivateRoutes.js","components/router/PublicRoutes.js","components/router/AppRouter.js","BlogCreator.js","index.js"],"names":["types","authLogin","authLogout","authChecking","authCheckingFinish","uiHideAsideBar","uiSetLouding","uiSetUndisabledUpdataButton","uiSetdisabledUpdataButton","uiEditStateButton","postSetActive","postSetActiveNew","postGetPost","postCreatePost","postSave","postDelete","postUpdate","postLogoutCleanPosts","initialState","checking","posts","activePost","asideHidden","loading","disableUpdate","reducers","combineReducers","ui","state","action","type","uiSetFinishLouding","auth","payload","post","map","arr","id","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","fetchToken","endpoint","data","method","url","token","localStorage","getItem","fetch","headers","body","JSON","stringify","fetchTokenLess","a","fileUpload","file","prevFile","formData","FormData","append","process","REACT_APP_API_URL","resp","json","ok","imgUrl","console","log","Swal","fire","setDisableUpdateButton","setUnDisableUpdateButton","startUpdatePost","dispatch","startUploadImg","getState","title","text","allowOutsideClick","didOpen","showLoading","imageUrl","setItem","close","startDeletePost","postId","isNew","loadPost","startAuthRegister","user","login","uid","name","icon","msg","startLogout","clear","logout","setCheckingFinish","LoginScreen","useDispatch","useState","email","password","formValues","setFormValues","viewPass","setViewPass","handleOnChange","target","value","handleTurnViewPass","className","onSubmit","e","preventDefault","length","authStartLogin","autoComplete","placeholder","onChange","onClick","to","formRegisterValidator","lastName","confirmPassword","test","RegisterScreen","viewConfirmPass","setViewConfirmPass","handleOnSubmitRegister","validation","username","handleTurnViewConfirmPass","initState","CreatePostButton","useSelector","handleOnCreatePostButton","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","cancelButtonText","result","isConfirmed","isDenied","LogoutButton","handleLogout","moment","locale","MyPost","date","user_id","handleActivePost","Number","format","Posts","Aside","useEffect","DeleteFab","handleOnDeletePost","Savebutton","disabled","urlImg","removeItem","FileUploadbutton","style","display","files","document","querySelector","click","UpdateButton","ShowImgButton","imageWidth","showConfirmButton","imageAlt","PreviewButton","width","html","BlogEditor","postDataValues","setPostDataValues","refPostId","useRef","refPostIsNew","current","editor","ClassicEditor","getData","NoContent","BlogCreator","LoadingScreen","size","color","PrivateRoutes","isAuthenticated","Component","component","rest","props","prototype","PropTypes","bool","isRequired","func","PublicRoutes","AppRouter","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b294f874.chunk.js","sourcesContent":["\n\nexport const types = {\n\n    authLogin: '[auth] Auth login',\n    authLogout: '[auth] Auth logout',\n    // authRegister: '[auth] Auth register',\n\n    authChecking: '[auth] Checking login state',\n    authCheckingFinish: '[auth] Finish checking login state',\n\n    uiHideAsideBar: '[ui] Hidde/show aside',\n    uiSetLouding: '[ui] Ui set louding',\n    uiSetUndisabledUpdataButton: '[ui] Ui set undisable update button',\n    uiSetdisabledUpdataButton: '[ui] Ui set disable update button',\n    //TODOOO1\n    uiEditStateButton: '[ui] Ui editStateButton',\n\n    postSetActive: '[post] Set active post',\n    postSetActiveNew: '[post] Set active new post',\n    // postStartSave: '[post] Post Start save',\n    postGetPost: '[post] Post get post',\n    postCreatePost: '[post] Post create post',\n    postSave: '[post] Post save',\n    postDelete: '[post] Post delete',\n    postUpdate: '[post] Post update',\n    postLogoutCleanPosts : '[post] Post logout cleaning',\n}\n\n","\n/*\n    auth {\n        checking: true,\n        uid: 1,\n        name: jorge\n    }\n*/\nimport { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true,\n}\n\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.authLogin:\n            return {\n                ...state,\n                checking: false,\n                ...action.payload\n            }\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false,\n            }\n        case types.authLogout:\n            return {\n                checking: false,\n            }\n        default:\n            return state;\n    }\n\n}\n\n","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    posts: [],\n    activePost: null,\n}\n\nexport const postReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.postGetPost:\n            return {\n                ...state,\n                posts: action.payload.map( arr => arr ),\n            };\n        case types.postSetActive:\n            return {\n                ...state,\n                activePost: { ...action.payload },\n            };\n        case types.postSave:\n            return {\n                ...state,\n                posts: [\n                    action.payload,\n                    ...state.posts\n                ],\n            };\n        case types.postUpdate:\n            return {\n                ...state,\n                posts: state.posts.map( post => ( post.id === action.payload.id ) ? action.payload : post ),\n            };\n        case types.postDelete:\n            return {\n                ...state,\n                posts: state.posts.filter( post => post.id !== action.payload ),\n                activePost: null,\n            };\n        case types.postLogoutCleanPosts:\n            return {\n                posts: [],\n                activePost: null,\n            };\n    \n        default:\n            return state;\n    }\n}","/**\n *   ui = {\n *      asideHidden: false/true,\n *      loading: false,\n *  }\n */\n\nimport { types } from \"../types/types\";\n\nconst initialState = {\n    asideHidden: false,\n    loading: false,\n    disableUpdate: true,\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiHideAsideBar:\n            return {\n                ...state,\n                asideHidden: !state.asideHidden\n            };\n        case types.uiSetLouding:\n            return {\n                ...state,\n                loading: true,\n            };\n        case types.uiSetFinishLouding:\n            return {\n                ...state,\n                loading: false,\n            };\n        case types.uiSetdisabledUpdataButton:\n            return {\n                ...state,\n                disableUpdate: true,\n            };\n        case types.uiSetUndisabledUpdataButton:\n            return {\n                ...state,\n                disableUpdate: false,\n            };\n        default:\n            return state;\n    }\n\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { postReducer } from \"./postReducer\";\n\nimport { uiReducer } from \"./uiReducer\";\n\nexport const reducers = combineReducers({\n    ui: uiReducer,\n    auth: authReducer,\n    post: postReducer,\n})","import { applyMiddleware, compose, createStore } from 'redux'\nimport thunk from 'redux-thunk';\n\nimport { reducers } from '../reducers/rootReducers';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n","export const fetchToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `http://localhost:5000/api/${ endpoint }`;\n    const token = localStorage.getItem( 'token' ) || '';\n\n    if ( method === 'GET' ) {\n        return  fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    }else {\n        return  fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n}","\n\nexport const fetchTokenLess = async( endpoint, data, method = 'GET' ) => {\n    \n    const url = `http://localhost:5000/api/${ endpoint }`\n\n    if ( method === 'GET' ) {\n        return  fetch( url );\n    }else {\n        return  fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n}\n\n","import Swal from \"sweetalert2\";\n\n\n\nexport const fileUpload = async( file, prevFile ) => {\n\n    const token = localStorage.getItem( 'token' ) || '';\n    const formData = new FormData();\n    formData.append( 'imageUrl', file );  \n\n    if ( !!prevFile ) {\n        formData.append( 'prevImg', prevFile );  \n    }\n\n    try {\n        const resp = await fetch( `${ process.env.REACT_APP_API_URL }/post/updateImg`, {\n            method: 'POST',\n            headers: {\n                // 'Content-type': 'application/json',\n                'x-token': token,\n            },\n            body:  formData ,\n        });\n        const body = await resp.json();\n    \n        if ( body.ok ) {\n            return body.imgUrl;\n        }else {\n            console.log( body );\n\n            return null;\n        }\n    } catch ( err ) {\n        console.log( err );\n        Swal.fire( 'Error', 'Hubo un error al subir la imagen', 'error' );\n    }\n}\n\n","import { types } from \"../types/types\";\n\n\nexport const uiHideAsaid = () => ({\n    type: types.uiHideAsideBar\n})\n\nexport const uiSetLoading = () => ({\n    type: types.uiSetLouding,\n})\n\nexport const uiSetFinishLoading = () => ({\n    type: types.uiSetFinishLouding,\n})\n\nexport const setDisableUpdateButton = () => ({\n    type: types.uiSetdisabledUpdataButton\n})\nexport const setUnDisableUpdateButton = () => ({\n    type: types.uiSetUndisabledUpdataButton\n})","import Swal from \"sweetalert2\";\nimport { fetchToken } from \"../helpers/fetchToken\";\nimport { fileUpload } from \"../helpers/imageUpload\";\nimport { types } from \"../types/types\";\nimport { setDisableUpdateButton } from \"./ui\";\n\n\nexport const startGetPosts = () => {\n    return async( dispatch ) => {\n        try {\n            const resp = await fetchToken( 'post' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( loadPost( body.resp ) );\n            }else {\n                console.log( body );\n            }\n        } catch ( err ) {\n            Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n        }\n    }\n}\n\nexport const startUpdatePost = ( post ) => {\n    return async( dispatch ) => {\n        try {\n            const resp = await fetchToken( `post/${ post.id }`, post, 'PUT');\n            const body = await resp.json();\n            \n            if ( body.ok ) {\n                dispatch( postUpdate( post ) );\n                dispatch( setDisableUpdateButton()  );\n                Swal.fire('Guardado!', '', 'success');\n            }else {\n                console.log( body );\n                Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n            }\n        } catch ( err ) {\n            Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n        }\n    }\n}\n\nexport const startUploadImg = ( file, prevFile = null ) => {\n    return async( dispatch, getState ) => {\n        const { post } = getState().post.activePost;\n        try {\n            Swal.fire({\n                title: 'Uploading...',\n                text: 'Please wait...',\n                allowOutsideClick: false,\n                didOpen: () => {\n                    Swal.showLoading();\n                }\n            })\n\n            const imgUrl = await fileUpload( file, prevFile );\n            post.imageUrl = imgUrl;\n            \n            if ( !!post.id ) {\n                dispatch( startUpdatePost( post ) );\n            }else {\n                localStorage.setItem('url_img', imgUrl);\n            }\n\n\n            Swal.close();\n            Swal.fire('Imagen subida', 'La Imagen se cargo correctamente!', 'success')\n        } catch ( err ) {\n            console.log( err );\n            Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n        }\n    }\n}\n\nexport const startDeletePost = ( postId ) => {\n    return async( dispatch ) => {\n        try {\n            const resp = await fetchToken( `post/${ postId }`, {}, 'DELETE');\n            const body = await resp.json();\n            \n            if ( body.ok ) {\n                dispatch( postDelete( postId ) );\n                Swal.fire('Borrado!', '', 'success');\n            }else {\n                console.log( body );\n                Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n            }\n        } catch ( err ) {\n            Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n        }\n    }\n}\n\nexport const startSavePost = ( post ) => {\n    return async( dispatch ) => {\n        const urlImg = localStorage.getItem('url_img') || null;\n        try {\n            const resp = await fetchToken( `post`, { ...post, imageUrl: urlImg }, 'POST');\n            const body = await resp.json();\n            \n            if ( body.ok ) {\n                dispatch( postSave( body.post ) );\n                dispatch( setDisableUpdateButton()  );\n                dispatch( postSetActive( false, body.post ) );\n                localStorage.removeItem( 'url_img' );\n                Swal.fire('Guardado!', '', 'success');\n            }else {\n                console.log( body );\n                Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n            }\n        } catch ( err ) {\n            Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n        }\n    }\n}\n\nconst postUpdate = ( post ) => ({\n    type: types.postUpdate,\n    payload: post,\n});\n\nconst postSave = ( post ) => ({\n    type: types.postSave,\n    payload: post,\n});\n\nconst postDelete = ( postId ) => ({\n    type: types.postDelete,\n    payload: postId,\n});\n\nexport const postSetActive = ( isNew, post ) => ({\n    type: types.postSetActive,\n    payload: {\n        isNew, \n        post\n    },\n});\n\nconst loadPost = ( posts ) => ({\n    type: types.postGetPost,\n    payload: posts,\n});\n\nexport const logoutCleanPostsUser = () => ({\n    type: types.postLogoutCleanPosts,\n});","import Swal from \"sweetalert2\";\nimport { fetchToken } from \"../helpers/fetchToken\";\n\nimport { fetchTokenLess } from \"../helpers/fetchTokenLess\";\nimport { types } from \"../types/types\";\nimport { logoutCleanPostsUser } from \"./post\";\n\n\n\nexport const authStartLogin = ( email, password ) => {\n    return async( dispatch ) => {\n\n        try {\n            const resp = await fetchTokenLess( 'auth', { email, password }, 'POST' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( login({\n                    uid: body.uid,\n                    name: body.name\n                }));\n                localStorage.setItem( 'token', body.token );\n            }else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Oops...',\n                    text: 'El correo o la contraseña son incorrectos',\n                })\n            }\n\n        } catch ( err ) {\n            console.log( err );\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'Ocurrio un error con el servicio, intentelo más tarde',\n            })\n        }\n\n    }\n}\n\nexport const startAuthRegister = ( user ) => {\n    return async( dispatch ) => {\n        try {\n            \n            const resp = await fetchTokenLess( 'auth/create', { ...user }, 'POST' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( login({\n                    uid: body.uid,\n                    name: body.name\n                }));                \n                localStorage.setItem( 'token', body.token );\n            }else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Oops...',\n                    text: body.msg,\n                })\n                console.log( body );\n\n            }\n\n        } catch ( err ) {\n            console.log( err );\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: err.msg,\n            })\n        }\n    }\n}\n\nexport const startChecking = () => {\n    return async( dispatch ) => {\n        try {\n            \n            const resp = await fetchToken( 'auth/renew' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( login({\n                    uid: body.uid,\n                    name: body.name\n                }));\n                localStorage.setItem( 'token', body.token );\n            }else {\n                dispatch( setCheckingFinish() );\n            }\n        } catch ( err ) {\n            console.log( err );\n            dispatch( setCheckingFinish() );\n\n        }\n    }\n}\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( logout() );\n        dispatch( logoutCleanPostsUser() );\n\n    }\n}\n\nexport const setCheckingFinish = () => ({\n    type: types.authCheckingFinish,\n});\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user,\n});\n\nconst logout = () => ({\n    type: types.authLogout,\n})\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { authStartLogin } from '../../actions/auth';\n\nexport const LoginScreen = () => {\n    \n    const dispatch = useDispatch();\n    const [ formValues, setFormValues ] = useState({\n        email: '',\n        password: '',\n    });\n    const { email, password } = formValues;\n    const [viewPass, setViewPass] = useState( false );\n\n    const handleOnChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [ target.name ]: target.value,\n        });\n    }\n\n    const handleTurnViewPass = () => {\n        setViewPass( !viewPass );\n    }\n\n    const handleOnSubmit = ( e ) => {\n        e.preventDefault();\n\n        if ( email.length < 2 || password.length < 7 ) {\n            return Swal.fire( 'Error', 'Asegurate de llenar todos los espacios', 'error' );\n        }\n\n        dispatch( authStartLogin( email, password ) );\n    }\n\n    return (\n        <div className=\"auth__auth-container\">\n            <div className=\"auth__auth-content\">\n                <div className=\"auth__auth-header\">\n                    <h2>Iniciar sesión</h2>\n                </div>\n                <div className=\"auth__auth-body\">\n                    <form \n                        className=\"form__form-group\"\n                        onSubmit={ handleOnSubmit }\n                    >\n                        <label className=\"form__form-label\">Correo:</label>\n                        <div className=\"form__form-group-icon\">\n                            <input \n                                className=\"form__form-control\"\n                                type=\"email\"\n                                autoComplete=\"false\"  \n                                name=\"email\"\n                                placeholder=\"\"\n                                value={ email }\n                                onChange={ handleOnChange }\n                            />\n                            <i className=\"fas fa-envelope form-icon\"></i>\n                        </div>\n                        <label className=\"form__form-label\">Contraseña:</label>\n                        <div className=\"form__form-group-icon\">\n                            <input \n                                className=\"form__form-control\"\n                                autoComplete=\"false\"  \n                                type={`${ viewPass ? 'text' : 'password'}`}\n                                name=\"password\"\n                                placeholder=\"\"\n                                value={ password }\n                                onChange={ handleOnChange }\n                            />\n                            <i className=\"fas fa-lock form-icon\"></i>\n                            {\n                                ( viewPass ) \n                                ? ( \n                                    <div className=\"form-icon-eye\">\n                                        <i \n                                            onClick={ handleTurnViewPass } \n                                            className=\"fas fa-eye-slash\">\n                                        </i>\n                                    </div> \n                                )\n                                : (\n                                    <div className=\"form-icon-eye\">\n                                        <i \n                                            onClick={ handleTurnViewPass } \n                                            className=\"fas fa-eye\"\n                                        ></i>\n                                    </div>\n                                )\n                            }\n                        </div>\n                        <Link to=\"/auth/register\" className=\"form__form-link\"><span>¿No tienes una cuenta? Registrate</span></Link>\n                        <button className=\"btn btn-primary btn-block\">Iniciar sesión</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { emailValidator } from \"./emailValidator\";\n\n\nexport const formRegisterValidator = ( formValues ) => {\n    \n    if ( formValues.name.length < 2 ) {\n        return {\n            ok: false,\n            msg: 'Asegurate de llenar todos los espacios.',\n        }\n    }else if ( formValues.lastName.length < 2 ) {\n        return {\n            ok: false,\n            msg: 'Asegurate de llenar todos los espacios.',\n        }\n    }else if ( formValues.email.length < 2 ) {\n        return {\n            ok: false,\n            msg: 'Asegurate de llenar todos los espacios.',\n        }\n    }else if ( formValues.password.length < 2 ) {\n        return {\n            ok: false,\n            msg: 'Asegurate de llenar todos los espacios.',\n        }\n    }else if ( formValues.confirmPassword.length < 2 ) {\n        return {\n            ok: false,\n            msg: 'Asegurate de llenar todos los espacios.',\n        }\n    }else if ( !emailValidator( formValues.email ) ) {\n        return {\n            ok: false,\n            msg: 'El correo electronico no es valido.',\n        }\n    }else if ( formValues.password !== formValues.confirmPassword ) {\n        return {\n            ok: false,\n            msg: 'Las constraseñas deben coincidir.',\n        }\n    }else if ( formValues.password.length < 7 ) {\n        return {\n            ok: false,\n            msg: 'La constraseña debe tener al menos 7 caracteres .',\n        }\n    }else {\n        return {\n            ok: true\n        }\n    }\n}\n","\nexport const emailValidator = ( email ) => {\n    return  /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test( email );\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { startAuthRegister } from '../../actions/auth';\nimport { formRegisterValidator } from '../../helpers/formRegisterValidator';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const [ formValues, setFormValues ] = useState({\n        name: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n    });\n    const { name, lastName, email, password, confirmPassword } = formValues;\n    const [viewPass, setViewPass] = useState( false );\n    const [viewConfirmPass, setViewConfirmPass] = useState( false );\n\n    const handleOnChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [ target.name ]: target.value,\n        });\n    }\n\n    const handleOnSubmitRegister = async( e ) => {\n        e.preventDefault();\n\n        const validation = await formRegisterValidator( formValues );\n\n        if ( !validation.ok ) {\n            return Swal.fire( 'Error', validation.msg, 'error' );\n        }\n\n        dispatch( startAuthRegister({ username: name, 'last_name':lastName, email, password, }) );\n    }\n\n    const handleTurnViewPass = () => {\n        setViewPass( !viewPass );\n    }\n    const handleTurnViewConfirmPass = () => {\n        setViewConfirmPass( !viewConfirmPass );\n    }\n\n    return (\n        <div className=\"auth__auth-container\">\n            <div className=\"auth__auth-content\">\n                <div className=\"auth__auth-header\">\n                    <h2>Registrarse</h2>\n                </div>\n                <div className=\"auth__auth-body\">\n                    <form \n                        className=\"form__form-group\"\n                        onSubmit={ handleOnSubmitRegister }\n                    >\n                        <label className=\"form__form-label\">Nombre:</label>\n                        <div className=\"form__form-group-icon\">\n                            <input \n                                className=\"form__form-control\"\n                                type=\"text\"\n                                autoComplete=\"false\"  \n                                name=\"name\"\n                                placeholder=\"\"\n                                value={ name }\n                                onChange={ handleOnChange }\n                            />\n                            <i className=\"fas fa-user form-icon\"></i>\n                        </div>\n\n                        <label className=\"form__form-label\">Apellido:</label>\n                        <div className=\"form__form-group-icon\">\n                            <input \n                                className=\"form__form-control\"\n                                type=\"text\"\n                                autoComplete=\"false\"  \n                                name=\"lastName\"\n                                placeholder=\"\"\n                                value={ lastName }\n                                onChange={ handleOnChange }\n                            />\n                            <i className=\"fas fa-user form-icon\"></i>\n                        </div>\n\n                        <label className=\"form__form-label\">Correo:</label>\n                        <div className=\"form__form-group-icon\">\n                            <input \n                                className=\"form__form-control\"\n                                type=\"email\"\n                                autoComplete=\"false\"  \n                                name=\"email\"\n                                placeholder=\"\"\n                                value={ email }\n                                onChange={ handleOnChange }\n                            />\n                            <i className=\"fas fa-envelope form-icon\"></i>\n                        </div>\n\n                        <label className=\"form__form-label\">Contraseña:</label>\n                        <div className=\"form__form-group-icon\">\n                            <input \n                                className=\"form__form-control\"\n                                autoComplete=\"false\"  \n                                type={`${ viewPass ? 'text' : 'password'}`}\n                                name=\"password\"\n                                placeholder=\"\"\n                                value={ password }\n                                onChange={ handleOnChange }\n                            />\n                            <i className=\"fas fa-lock form-icon\"></i>\n                            {\n                                ( viewPass ) \n                                ? ( \n                                    <div className=\"form-icon-eye\">\n                                        <i \n                                            onClick={ handleTurnViewPass } \n                                            className=\"fas fa-eye-slash\">\n                                        </i>\n                                    </div> \n                                )\n                                : (\n                                    <div className=\"form-icon-eye\">\n                                        <i \n                                            onClick={ handleTurnViewPass } \n                                            className=\"fas fa-eye\"\n                                        ></i>\n                                    </div>\n                                )\n                            }\n                        </div>\n\n                        <label className=\"form__form-label\">Confirmar contraseña:</label>\n                        <div className=\"form__form-group-icon\">\n                            <input \n                                className=\"form__form-control\"\n                                autoComplete=\"false\"  \n                                type={`${ viewConfirmPass ? 'text' : 'password'}`}\n                                name=\"confirmPassword\"\n                                placeholder=\"\"\n                                value={ confirmPassword }\n                                onChange={ handleOnChange }\n                            />\n                            <i className=\"fas fa-lock form-icon\"></i>\n                            {\n                                ( viewConfirmPass ) \n                                ? ( <i onClick={ handleTurnViewConfirmPass } className=\"fas fa-eye-slash form-icon-eye\"></i> )\n                                : ( <i onClick={ handleTurnViewConfirmPass } className=\"fas fa-eye form-icon-eye\"></i> )\n                            }\n                        </div>\n                        <Link to=\"/auth/login\" className=\"form__form-link\"><span>¿Ya tienes una cuenta? Inicia sesión</span></Link>\n                        <button className=\"btn btn-primary btn-block\">Registrarse</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Swal from 'sweetalert2';\nimport { postSetActive, startUpdatePost } from '../../../../actions/post';\n\nconst initState = {\n    title: '',\n    body: '',\n}\n\nexport const CreatePostButton = () => {\n\n    const dispatch = useDispatch();\n    const { activePost } = useSelector(state => state.post);\n    const { disableUpdate } = useSelector(state => state.ui);\n\n    const handleOnCreatePostButton = async() => {\n        \n        if ( !disableUpdate ) {\n            const result = await Swal.fire({\n                icon: 'warning',\n                title: '¿Seguro que quieres cambiar de documento?',\n                text: 'Sí cambias de documento sin guardar se perderán los cambios',\n                showDenyButton: true,\n                showCancelButton: true,\n                confirmButtonText: `Guardar`,\n                denyButtonText: `No guardar`,\n                cancelButtonText: `cancelar`,\n            });\n            \n            console.log( result );\n            \n            if (result.isConfirmed) {\n                dispatch( startUpdatePost( activePost.post ) );\n                dispatch( postSetActive( true, initState ));\n            } else if (result.isDenied) {\n                // Swal.fire('Changes are not saved', '', 'info')\n                dispatch( postSetActive( true, initState ));\n            }\n        }else {\n            dispatch( postSetActive( true, initState ));\n            \n        }\n       \n    }\n    \n    return (\n        <div \n            className=\"aside__aside-add-post\"\n            onClick={ handleOnCreatePostButton }\n        >\n            <i className=\"fas fa-plus-circle fa-7x\"></i>\n            <span>Crear publicación</span>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogout } from '../../../../actions/auth';\nimport { startUpdatePost } from '../../../../actions/post';\n\n\n\nexport const LogoutButton = () => {\n\n    const dispatch = useDispatch();\n    const { disableUpdate } = useSelector(state => state.ui);\n    const { activePost } = useSelector(state => state.post);\n\n    const handleLogout = async() => {\n\n        if ( !disableUpdate ) {\n            const result = await Swal.fire({\n                icon: 'warning',\n                title: '¿Seguro que quieres salir?',\n                text: 'Sí sales sin guardar se perderán los cambios',\n                showDenyButton: true,\n                showCancelButton: true,\n                confirmButtonText: `Guardar`,\n                denyButtonText: `No guardar`,\n                cancelButtonText: `cancelar`,\n            });\n\n            if (result.isConfirmed) {\n                dispatch( startUpdatePost( activePost.post ) );\n            } else if (result.isDenied) {\n                dispatch( startLogout() );\n            }\n        }else {\n            dispatch( startLogout() );\n        }\n    }\n\n    return (\n        <button onClick={ handleLogout } className=\"btn btn-danger\" >\n            <span>Salir <i className=\"fas fa-sign-out-alt\"></i></span>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Swal from 'sweetalert2';\nimport moment from 'moment';\nimport 'moment/locale/es-mx';\nimport { postSetActive, startUpdatePost } from '../../../../actions/post';\n\n\nmoment.locale( 'es-mx' );\n\nexport const MyPost = ({ id, title, date, body, imageUrl, user_id }) => {\n\n    const dispatch = useDispatch();\n    const { disableUpdate } = useSelector(state => state.ui);\n    const { activePost } = useSelector(state => state.post);\n\n    const handleActivePost = async() => {\n\n        if ( !disableUpdate ) {\n            if ( id !== activePost.post.id ) {\n                const result = await Swal.fire({\n                    icon: 'warning',\n                    title: '¿Seguro que quieres cambiar de documento?',\n                    text: 'Sí cambias de documento sin guardar se perderán los cambios',\n                    showDenyButton: true,\n                    showCancelButton: true,\n                    confirmButtonText: `Guardar`,\n                    denyButtonText: `No guardar`,\n                    cancelButtonText: `cancelar`,\n                });\n                \n                console.log( result );\n                \n                if (result.isConfirmed) {\n                    dispatch( startUpdatePost( activePost.post ) );\n                } else if (result.isDenied) {\n                    // Swal.fire('Changes are not saved', '', 'info')\n                    dispatch( postSetActive(\n                        false,\n                        { id, title, date, body, imageUrl, user_id }\n                    ));\n                }\n            }\n        }else {\n            dispatch( postSetActive(\n                false,\n                { id, title, date, body, imageUrl, user_id }\n            ));\n        }\n\n    }\n\n    return (\n        <div \n            className=\"aside__post-container\"\n            onClick={ handleActivePost }\n        >\n            <div className=\"aside__post-title\">\n                <span>{ title }</span>\n            </div>\n            <div className=\"aside__post-date\">\n                <span>{ moment( Number(date) ).format( 'llll' ) }</span>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { MyPost } from './MyPost';\n\nexport const Posts = () => {\n\n    const { posts } = useSelector(state => state.post)\n\n    return (\n        <div className=\"aside__aside-myPosts\">\n            {\n                posts.map(( post ) => (\n                    <MyPost \n                        key={ post.id }\n                        { ...post }\n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { startGetPosts } from '../../../actions/post';\nimport { uiHideAsaid } from '../../../actions/ui';\nimport { CreatePostButton } from './buttons/CreatePostButton';\nimport { LogoutButton } from './buttons/LogoutButton';\nimport { Posts } from './myPost/Posts';\n\nexport const Aside = () => {\n\n    const { asideHidden } = useSelector( state => state.ui );\n    const { name } = useSelector( state => state.auth );\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch( startGetPosts() );\n    }, [ dispatch ]);\n\n    const handleAsideToggleg = () => {\n        dispatch( uiHideAsaid() );\n    }\n\n    return (\n        <aside className={`aside__aside-container ${ asideHidden && 'asideHidden' }`}>\n            <div className=\"aside__aside-toggle-container\">\n                <div \n                    className={`aside__toggle ${ asideHidden && 'asideHiddenToggle' }`}\n                    onClick={ handleAsideToggleg }    \n                >\n                    {\n                        ( asideHidden ) \n                            ? <i className=\"fas fa-arrow-right\"></i>\n                            : <i className=\"fas fa-arrow-left\"></i>\n                    }\n                </div>\n            </div>\n            <div className=\"aside__aside-user\">\n                <span><i className=\"fas fa-user\"></i> { ` ${ name }` }</span>\n                <LogoutButton />\n            </div>\n            <CreatePostButton />\n            <div className=\"aside__aside-myPosts-span\">\n                <span>Mis publicaciones</span>\n            </div>\n            <Posts />\n        </aside>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startDeletePost } from '../../../actions/post';\n\nexport const DeleteFab = () => {\n\n    const dispatch = useDispatch();\n    const { activePost } = useSelector(state => state.post)\n\n\n    const handleOnDeletePost = async() => {\n\n        const result = await Swal.fire({\n            icon: 'warning',\n            title: '¿Seguro que quieres borrar el documento?',\n            text: 'Si borras el documento no se podrá recuperar',\n            showCancelButton: true,\n            confirmButtonText: `Borrar`,\n            cancelButtonText: `cancelar`,\n        });\n\n        if (result.isConfirmed) {\n            dispatch( startDeletePost( activePost.post.id ) );\n        }\n\n    }\n\n    return (\n        <>\n            <button \n                className=\"btn btn-danger blogCreator-blog-fab-delete\"\n                onClick={ handleOnDeletePost }\n            >\n                <span>Eliminar <i className=\"fas fa-trash\"></i></span>\n            </button>\n        </>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startSavePost } from '../../../actions/post';\n\nexport const Savebutton = () => {\n\n    const dispatch = useDispatch();\n    const { disableUpdate } = useSelector( state => state.ui );\n    const { activePost } = useSelector( state => state.post );\n    \n    const handleOnSavePost = () => {\n    \n        dispatch( startSavePost( activePost.post ) );\n\n    }\n\n\n    return (\n        <button \n            className=\"navbar__nav-button\"\n            disabled={ disableUpdate }\n            onClick={ handleOnSavePost }\n        >\n            <i className=\"fas fa-save fa-2x\"></i>\n            <span>Guardar post</span>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { startUploadImg } from '../../../actions/post';\n\nexport const FileUploadbutton = () => {\n\n    const dispatch = useDispatch();\n    const { activePost } = useSelector(state => state.post);\n    \n\n    const handleOnClickPictureBotton = () => {\n        document.querySelector( '#fileSelector' ).click();\n    }\n\n    const handleFileSelectorChange = ({ target }) => {\n        const file = target.files[0];\n        \n        if ( activePost.isNew ) {\n            let imageUrl = localStorage.getItem('url_img') || null;\n            dispatch( startUploadImg( file, imageUrl ) );\n            \n        }else {\n            dispatch( startUploadImg( file ) );\n        }\n\n        // setFile( file );\n    }\n\n    return (\n        <>\n            <input \n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"image\"\n                style={{ display: 'none' }}\n                onChange={ handleFileSelectorChange }\n            />\n            <button \n                className=\"navbar__nav-button\"\n                onClick={ handleOnClickPictureBotton }\n            >\n                <i className=\"fas fa-upload fa-2x\"></i>\n                <span>Subir imagen</span>\n            </button>\n        </>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startUpdatePost } from '../../../actions/post';\n\nexport const UpdateButton = () => {\n\n    const { activePost } = useSelector(state => state.post);\n    const { disableUpdate } = useSelector( state => state.ui );\n    const dispatch = useDispatch();\n\n    const handleOnUpdate = () => {\n        dispatch( startUpdatePost( activePost.post ) );\n    }\n\n    return (\n        <button \n            className=\"navbar__nav-button\"\n            onClick={ handleOnUpdate }\n            disabled={ disableUpdate }\n        >\n            <i className=\"fas fa-pen-fancy fa-2x\"></i>\n            <span>Actualizar post</span>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nexport const ShowImgButton = () => {\n\n    const { activePost } = useSelector(state => state.post)\n\n    const handleOnShowImg = () => {\n        Swal.fire({\n            imageUrl: activePost.post.imageUrl,\n            imageWidth: '90%',\n            showConfirmButton: false,\n            imageAlt: 'Custom image',\n        });\n    }\n\n    return (\n        <button\n            className=\"btn btn-primary btn-circle\"\n            onClick={ handleOnShowImg }\n        >\n            <i className=\"fas fa-image fa-2x\" ></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Swal from 'sweetalert2'\n\nexport const PreviewButton = () => {\n\n    const { activePost } = useSelector(state => state.post);\n\n    const handleOnPreview = () => {\n        Swal.fire({\n            imageUrl: activePost.post.imageUrl,\n            // imageHeight: 1500,\n            width: 800,\n            showConfirmButton: false,\n            html: ` <div class=\"modal-html\"> <h1>${ activePost.post.title }</h1> ${ activePost.post.body } </div> ` ,\n            imageAlt: 'A tall image',\n        });\n    }\n\n    return (\n        <button\n            className=\"btn btn-primary btn-circle\"\n            onClick={ handleOnPreview }\n        >\n            <i className=\"fas fa-eye fa-2x\" ></i>\n        </button>\n    )\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { DeleteFab } from './buttons/DeleteFab';\nimport { Savebutton } from './buttons/Savebutton';\nimport { FileUploadbutton } from './buttons/FileUploadbutton';\nimport { UpdateButton } from './buttons/UpdateButton';\nimport { postSetActive } from '../../actions/post';\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { setDisableUpdateButton, setUnDisableUpdateButton } from '../../actions/ui';\nimport { ShowImgButton } from './buttons/ShowImgButton';\nimport { PreviewButton } from './buttons/PreviewButton';\n\n\n\n\nexport const BlogEditor = () => {\n\n    const dispatch = useDispatch();\n    const { asideHidden } = useSelector( state => state.ui );\n    const { activePost } = useSelector( state => state.post );\n    const { post } = activePost; \n    const [ postDataValues, setPostDataValues ] = useState( post );\n    const { title, body, imageUrl} = postDataValues;\n\n    const refPostId = useRef( post.id );\n    const refPostIsNew = useRef( activePost.isNew );\n\n    useEffect(() => {\n        if ( post.id !== refPostId.current ) {\n            setPostDataValues( post );\n            refPostId.current = post.id;\n            dispatch( setDisableUpdateButton() );\n        }\n    }, [ post, refPostId, setPostDataValues, dispatch ]);\n    \n    useEffect(() => {\n        if ( activePost.isNew === refPostIsNew.current ) {\n            dispatch( postSetActive(\n                activePost.isNew,\n                { ...postDataValues }\n            ));\n        }\n        refPostIsNew.current = activePost.isNew;\n        \n    }, [ dispatch, postDataValues, activePost.isNew]);\n    \n\n    const handleOnChangePostData = ( { target } ) => {\n\n        setPostDataValues({\n            ...postDataValues,\n            [target.name]: target.value\n        })\n        dispatch( setUnDisableUpdateButton() );\n            \n    }\n\n    const handleChangeCK =  ( e, editor ) => {\n\n        if ( JSON.stringify( post.body ) !== JSON.stringify( editor.getData() ) ) {\n            setPostDataValues({\n                ...postDataValues,\n                body: editor.getData()\n            })\n            dispatch( setUnDisableUpdateButton() );\n            \n        }\n    };\n\n    return (\n        <div className={`blogEditor__blog-container ${ !asideHidden && 'asideHide'}`}>\n            <div className=\"blogEditor__blog-navEditor\">\n                <div className=\"blogCreator-blog-nav-buttons\">\n                    <FileUploadbutton />\n                    {\n                        activePost.isNew ? <Savebutton />\n                        : <UpdateButton />\n                    }\n                    \n                </div>\n            </div>\n            <div className=\"blogEditor__blog-fab\">\n                <div className=\"blogEditor__blog-img\">\n                    { !!imageUrl && <ShowImgButton /> }\n                </div>\n                <div className=\"blogEditor__blog-preview\">\n                { !activePost.isNew && <PreviewButton /> }\n                </div>\n            </div>\n            <div className=\"blogEditor__blog-editor\">\n                <div className=\"blogEditor__blog-editor-container\">\n                    <div className=\"blogEditor__blog-editor-title\">\n                        <input \n                            type=\"text\"\n                            placeholder=\"Some awesome title!\"\n                            value={ title }\n                            name=\"title\"\n                            onChange={ handleOnChangePostData }\n                        />\n                    </div>\n                    <div className=\"blogEditor__blog-editor-body\" >\n                        <CKEditor \n                            editor={ ClassicEditor }\n                            className=\"editor\"\n                            data={ body }\n                            onChange={ handleChangeCK }\n                        />\n                    </div>\n                    { !activePost.isNew && <DeleteFab /> }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nexport const NoContent = () => {\n\n    const { asideHidden } = useSelector( state => state.ui );\n\n    return (\n        <div className={`blogCreator__blog-no-content-container ${ !asideHidden && 'asideIsHidden' }`}>\n            <i className=\"fas fa-pencil-alt fa-7x\"></i>\n            <span className=\"blogCreator__blog-no-content-title\">Selecciona o crea un post!</span>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Aside } from '../ui/aside/Aside';\nimport { BlogEditor } from './BlogEditor';\nimport { NoContent } from './NoContent';\n\nexport const BlogCreator = () => {\n\n    const { activePost } = useSelector( state => state.post );\n\n    return (\n        <div className=\"blogCreatpr__blog\">\n            <Aside />\n            {\n                ( activePost ) \n                ? <BlogEditor />\n                : <NoContent />\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport RingLoader from 'react-spinners/RingLoader';\n\nexport const LoadingScreen = () => {\n    return (\n        <div className=\"loading__load-container\">\n            <RingLoader size={ 60 } color=\"#2D95EB\"/>\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoutes = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest }\n            component={ ( props ) => (\n                ( isAuthenticated ) ? \n                <Component { ...props } />\n                :\n                <Redirect to=\"/auth/login\" />\n            )}\n        />\n    )\n}\n\nPrivateRoutes.prototype = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRoutes = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    // console.log(isAuthenticated);\n    return (\n        <Route { ...rest }\n            component={ ( props ) => (\n                ( isAuthenticated ) ?\n                (<Redirect to=\"/\" />)\n                :\n                (<Component { ...props } />)\n            )}\n        />\n    )\n}\n\n\nPublicRoutes.prototype = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\nimport { setCheckingFinish, startChecking } from '../../actions/auth';\nimport { LoginScreen } from '../auth/LoginScreen';\nimport { RegisterScreen } from '../auth/RegisterScreen';\nimport { BlogCreator } from '../blog-creator/BlogCreator';\nimport { LoadingScreen } from '../ui/loading/LoadingScreen';\nimport { PrivateRoutes } from './PrivateRoutes';\nimport { PublicRoutes } from './PublicRoutes';\n\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token') || null;\n        if ( token ) {\n            dispatch( startChecking() );\n        }else {\n            dispatch( setCheckingFinish() )\n        }\n\n    }, [ dispatch, uid ])\n\n    if ( checking ) {\n        return (\n            <LoadingScreen />\n        )\n    }\n\n    return (\n        <Router>\n            <main>\n                <Switch>\n                    <PublicRoutes \n                        exact \n                        path=\"/auth/login\" \n                        component={ LoginScreen } \n                        isAuthenticated={ !!uid }\n                    />\n                    <PrivateRoutes \n                        exact \n                        path=\"/\" \n                        component={ BlogCreator } \n                        isAuthenticated={ !!uid  }\n                    />\n                    <PublicRoutes \n                        exact \n                        path=\"/auth/register\" \n                        component={ RegisterScreen } \n                        isAuthenticated={ !!uid  }\n                    />\n                    <Redirect to=\"/\" />\n                </Switch>\n\n            </main>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\n// import { BlogCreator } from './components/blog-creator/BlogCreator';\n// import { AppRouter } from './components/router/AppRouter';\n// import { Aside } from './components/ui/aside/Aside';\n\nimport './styles/styles.scss';\nimport { AppRouter } from './components/router/AppRouter';\n\nexport const BlogCreator = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BlogCreator } from './BlogCreator';\n\nReactDOM.render(\n    <BlogCreator />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}
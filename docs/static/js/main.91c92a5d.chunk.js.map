{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/postReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","helpers/fetchToken.js","helpers/fetchTokenLess.js","helpers/imageUpload.js","actions/ui.js","actions/post.js","actions/auth.js","components/ui/loading/LoadingScreen.js","components/auth/LoginScreen.js","components/router/LoginCheckAuth.jsx","helpers/formRegisterValidator.js","helpers/emailValidator.js","components/auth/RegisterScreen.js","components/router/RegisterCheckAuth.jsx","components/ui/aside/buttons/CreatePostButton.js","components/ui/aside/buttons/LogoutButton.js","components/ui/aside/myPost/MyPost.js","components/ui/aside/myPost/Posts.js","components/ui/aside/Aside.js","components/blog-creator/buttons/DeleteFab.js","components/blog-creator/buttons/Savebutton.js","components/blog-creator/buttons/FileUploadbutton.js","components/blog-creator/buttons/UpdateButton.js","components/blog-creator/buttons/ShowImgButton.js","components/blog-creator/buttons/PreviewButton.js","components/blog-creator/BlogEditor.js","components/blog-creator/NoContent.js","components/blog-creator/BlogCreator.js","components/router/BlogEditorCheckAuth.jsx","components/router/AppRouter.js","BlogCreator.js","index.js"],"names":["types","authLogin","authLogout","authChecking","authCheckingFinish","uiHideAsideBar","uiSetLouding","uiSetUndisabledUpdataButton","uiSetdisabledUpdataButton","uiEditStateButton","postSetActive","postSetActiveNew","postGetPost","postCreatePost","postSave","postDelete","postUpdate","postLogoutCleanPosts","initialState","checking","posts","activePost","asideHidden","loading","disableUpdate","reducers","combineReducers","ui","state","arguments","length","undefined","action","type","_objectSpread","uiSetFinishLouding","auth","payload","post","map","arr","concat","_toConsumableArray","id","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","fetchToken","endpoint","data","method","url","token","localStorage","getItem","fetch","headers","body","JSON","stringify","fetchTokenLess","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_args","wrap","_context","prev","next","abrupt","stop","_x","_x2","apply","fileUpload","file","prevFile","formData","resp","FormData","append","process","REACT_APP_API_URL","sent","json","ok","imgUrl","console","log","t0","Swal","fire","setDisableUpdateButton","setUnDisableUpdateButton","startUpdatePost","_ref2","_callee2","dispatch","_context2","startUploadImg","_ref3","_callee3","getState","_context3","title","text","allowOutsideClick","didOpen","showLoading","imageUrl","setItem","close","_x3","_x4","startDeletePost","postId","_ref4","_callee4","_context4","_x5","isNew","loadPost","startAuthRegister","user","login","uid","name","icon","msg","startLogout","clear","logout","setCheckingFinish","LoadingScreen","_jsx","className","children","RingLoader","size","color","LoginScreen","useDispatch","_useState","useState","email","password","_useState2","_slicedToArray","formValues","setFormValues","_useState3","_useState4","viewPass","setViewPass","handleOnChange","target","_defineProperty","value","handleTurnViewPass","_jsxs","onSubmit","e","preventDefault","authStartLogin","autoComplete","placeholder","onChange","onClick","Link","to","LoginCheckAuth","Navigate","formRegisterValidator","lastName","confirmPassword","test","RegisterScreen","_useState5","_useState6","viewConfirmPass","setViewConfirmPass","handleOnSubmitRegister","validation","username","handleTurnViewConfirmPass","RegisterCheckAuth","initState","CreatePostButton","useSelector","handleOnCreatePostButton","result","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","cancelButtonText","isConfirmed","isDenied","LogoutButton","handleLogout","moment","locale","MyPost","date","user_id","handleActivePost","Number","format","Posts","Aside","useEffect","DeleteFab","handleOnDeletePost","_Fragment","Savebutton","disabled","_ref5","_callee5","urlImg","_context5","removeItem","_x6","FileUploadbutton","style","display","files","document","querySelector","click","UpdateButton","ShowImgButton","imageWidth","showConfirmButton","imageAlt","PreviewButton","width","html","BlogEditor","postDataValues","setPostDataValues","refPostId","useRef","refPostIsNew","current","CKEditor","editor","ClassicEditor","getData","NoContent","BlogCreator","BlogEditorCheckAuth","AppRouter","_useSelector","BrowserRouter","Routes","Route","path","element","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.91c92a5d.chunk.js","sourcesContent":["\n\nexport const types = {\n\n    authLogin: '[auth] Auth login',\n    authLogout: '[auth] Auth logout',\n    // authRegister: '[auth] Auth register',\n\n    authChecking: '[auth] Checking login state',\n    authCheckingFinish: '[auth] Finish checking login state',\n\n    uiHideAsideBar: '[ui] Hidde/show aside',\n    uiSetLouding: '[ui] Ui set louding',\n    uiSetUndisabledUpdataButton: '[ui] Ui set undisable update button',\n    uiSetdisabledUpdataButton: '[ui] Ui set disable update button',\n    //TODOOO1\n    uiEditStateButton: '[ui] Ui editStateButton',\n\n    postSetActive: '[post] Set active post',\n    postSetActiveNew: '[post] Set active new post',\n    // postStartSave: '[post] Post Start save',\n    postGetPost: '[post] Post get post',\n    postCreatePost: '[post] Post create post',\n    postSave: '[post] Post save',\n    postDelete: '[post] Post delete',\n    postUpdate: '[post] Post update',\n    postLogoutCleanPosts : '[post] Post logout cleaning',\n}\n\n","\n/*\n    auth {\n        checking: true,\n        uid: 1,\n        name: jorge\n    }\n*/\nimport { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true,\n}\n\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.authLogin:\n            return {\n                ...state,\n                checking: false,\n                ...action.payload\n            }\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false,\n            }\n        case types.authLogout:\n            return {\n                checking: false,\n            }\n        default:\n            return state;\n    }\n\n}\n\n","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    posts: [],\n    activePost: null,\n}\n\nexport const postReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.postGetPost:\n            return {\n                ...state,\n                posts: action.payload.map( arr => arr ),\n            };\n        case types.postSetActive:\n            return {\n                ...state,\n                activePost: { ...action.payload },\n            };\n        case types.postSave:\n            return {\n                ...state,\n                posts: [\n                    action.payload,\n                    ...state.posts\n                ],\n            };\n        case types.postUpdate:\n            return {\n                ...state,\n                posts: state.posts.map( post => ( post.id === action.payload.id ) ? action.payload : post ),\n            };\n        case types.postDelete:\n            return {\n                ...state,\n                posts: state.posts.filter( post => post.id !== action.payload ),\n                activePost: null,\n            };\n        case types.postLogoutCleanPosts:\n            return {\n                posts: [],\n                activePost: null,\n            };\n    \n        default:\n            return state;\n    }\n}","/**\n *   ui = {\n *      asideHidden: false/true,\n *      loading: false,\n *  }\n */\n\nimport { types } from \"../types/types\";\n\nconst initialState = {\n    asideHidden: false,\n    loading: false,\n    disableUpdate: true,\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiHideAsideBar:\n            return {\n                ...state,\n                asideHidden: !state.asideHidden\n            };\n        case types.uiSetLouding:\n            return {\n                ...state,\n                loading: true,\n            };\n        case types.uiSetFinishLouding:\n            return {\n                ...state,\n                loading: false,\n            };\n        case types.uiSetdisabledUpdataButton:\n            return {\n                ...state,\n                disableUpdate: true,\n            };\n        case types.uiSetUndisabledUpdataButton:\n            return {\n                ...state,\n                disableUpdate: false,\n            };\n        default:\n            return state;\n    }\n\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { postReducer } from \"./postReducer\";\n\nimport { uiReducer } from \"./uiReducer\";\n\nexport const reducers = combineReducers({\n    ui: uiReducer,\n    auth: authReducer,\n    post: postReducer,\n})","import { applyMiddleware, compose, createStore } from 'redux'\nimport thunk from 'redux-thunk';\n\nimport { reducers } from '../reducers/rootReducers';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n","export const fetchToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `https://enriquefisc.cyou/api/${ endpoint }`;\n    const token = localStorage.getItem( 'token' ) || '';\n\n    if ( method === 'GET' ) {\n        return  fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    }else {\n        return  fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n}","\n\nexport const fetchTokenLess = async( endpoint, data, method = 'GET' ) => {\n    \n    const url = `https://enriquefisc.cyou/api/${ endpoint }`\n\n    if ( method === 'GET' ) {\n        return  fetch( url );\n    }else {\n        return  fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n}\n\n","import Swal from \"sweetalert2\";\n\n\n\nexport const fileUpload = async( file, prevFile ) => {\n\n    const token = localStorage.getItem( 'token' ) || '';\n    const formData = new FormData();\n    formData.append( 'imageUrl', file );  \n\n    if ( !!prevFile ) {\n        formData.append( 'prevImg', prevFile );  \n    }\n\n    try {\n        const resp = await fetch( `${ process.env.REACT_APP_API_URL }/post/updateImg`, {\n            method: 'POST',\n            headers: {\n                // 'Content-type': 'application/json',\n                'x-token': token,\n            },\n            body:  formData ,\n        });\n        const body = await resp.json();\n    \n        if ( body.ok ) {\n            return body.imgUrl;\n        }else {\n            console.log( body );\n\n            return null;\n        }\n    } catch ( err ) {\n        console.log( err );\n        Swal.fire( 'Error', 'Hubo un error al subir la imagen', 'error' );\n    }\n}\n\n","import { types } from \"../types/types\";\n\n\nexport const uiHideAsaid = () => ({\n    type: types.uiHideAsideBar\n})\n\nexport const uiSetLoading = () => ({\n    type: types.uiSetLouding,\n})\n\nexport const uiSetFinishLoading = () => ({\n    type: types.uiSetFinishLouding,\n})\n\nexport const setDisableUpdateButton = () => ({\n    type: types.uiSetdisabledUpdataButton\n})\nexport const setUnDisableUpdateButton = () => ({\n    type: types.uiSetUndisabledUpdataButton\n})","import Swal from \"sweetalert2\";\nimport { fetchToken } from \"../helpers/fetchToken\";\nimport { fileUpload } from \"../helpers/imageUpload\";\nimport { types } from \"../types/types\";\nimport { setDisableUpdateButton } from \"./ui\";\n\n\nexport const startGetPosts = () => {\n    return async( dispatch ) => {\n        try {\n            const resp = await fetchToken( 'post' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( loadPost( body.resp ) );\n            }else {\n                console.log( body );\n            }\n        } catch ( err ) {\n            Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n        }\n    }\n}\n\nexport const startUpdatePost = ( post ) => {\n    return async( dispatch ) => {\n        try {\n            const resp = await fetchToken( `post/${ post.id }`, post, 'PUT');\n            const body = await resp.json();\n            \n            if ( body.ok ) {\n                dispatch( postUpdate( post ) );\n                dispatch( setDisableUpdateButton()  );\n                Swal.fire('Guardado!', '', 'success');\n            }else {\n                console.log( body );\n                Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n            }\n        } catch ( err ) {\n            Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n        }\n    }\n}\n\nexport const startUploadImg = ( file, prevFile = null ) => {\n    return async( dispatch, getState ) => {\n        const { post } = getState().post.activePost;\n        try {\n            Swal.fire({\n                title: 'Uploading...',\n                text: 'Please wait...',\n                allowOutsideClick: false,\n                didOpen: () => {\n                    Swal.showLoading();\n                }\n            })\n\n            const imgUrl = await fileUpload( file, prevFile );\n            post.imageUrl = imgUrl;\n            \n            if ( !!post.id ) {\n                dispatch( startUpdatePost( post ) );\n            }else {\n                localStorage.setItem('url_img', imgUrl);\n            }\n\n\n            Swal.close();\n            Swal.fire('Imagen subida', 'La Imagen se cargo correctamente!', 'success')\n        } catch ( err ) {\n            console.log( err );\n            Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n        }\n    }\n}\n\nexport const startDeletePost = ( postId ) => {\n    return async( dispatch ) => {\n        try {\n            const resp = await fetchToken( `post/${ postId }`, {}, 'DELETE');\n            const body = await resp.json();\n            \n            if ( body.ok ) {\n                dispatch( postDelete( postId ) );\n                Swal.fire('Borrado!', '', 'success');\n            }else {\n                console.log( body );\n                Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n            }\n        } catch ( err ) {\n            Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n        }\n    }\n}\n\nexport const startSavePost = ( post ) => {\n    return async( dispatch ) => {\n        const urlImg = localStorage.getItem('url_img') || null;\n        try {\n            const resp = await fetchToken( `post`, { ...post, imageUrl: urlImg }, 'POST');\n            const body = await resp.json();\n            \n            if ( body.ok ) {\n                dispatch( postSave( body.post ) );\n                dispatch( setDisableUpdateButton()  );\n                dispatch( postSetActive( false, body.post ) );\n                localStorage.removeItem( 'url_img' );\n                Swal.fire('Guardado!', '', 'success');\n            }else {\n                console.log( body );\n                Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n            }\n        } catch ( err ) {\n            Swal.fire( 'Error', 'Ocurrio un error con el servidor, intentelo de nuevo más tarde', 'error' );\n        }\n    }\n}\n\nconst postUpdate = ( post ) => ({\n    type: types.postUpdate,\n    payload: post,\n});\n\nconst postSave = ( post ) => ({\n    type: types.postSave,\n    payload: post,\n});\n\nconst postDelete = ( postId ) => ({\n    type: types.postDelete,\n    payload: postId,\n});\n\nexport const postSetActive = ( isNew, post ) => ({\n    type: types.postSetActive,\n    payload: {\n        isNew, \n        post\n    },\n});\n\nconst loadPost = ( posts ) => ({\n    type: types.postGetPost,\n    payload: posts,\n});\n\nexport const logoutCleanPostsUser = () => ({\n    type: types.postLogoutCleanPosts,\n});","import Swal from \"sweetalert2\";\nimport { fetchToken } from \"../helpers/fetchToken\";\n\nimport { fetchTokenLess } from \"../helpers/fetchTokenLess\";\nimport { types } from \"../types/types\";\nimport { logoutCleanPostsUser } from \"./post\";\n\n\n\nexport const authStartLogin = ( email, password ) => {\n    return async( dispatch ) => {\n\n        try {\n            const resp = await fetchTokenLess( 'auth', { email, password }, 'POST' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( login({\n                    uid: body.uid,\n                    name: body.name\n                }));\n                localStorage.setItem( 'token', body.token );\n            }else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Oops...',\n                    text: 'El correo o la contraseña son incorrectos',\n                })\n            }\n\n        } catch ( err ) {\n            console.log( err );\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'Ocurrio un error con el servicio, intentelo más tarde',\n            })\n        }\n\n    }\n}\n\nexport const startAuthRegister = ( user ) => {\n    return async( dispatch ) => {\n        try {\n            \n            const resp = await fetchTokenLess( 'auth/create', { ...user }, 'POST' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( login({\n                    uid: body.uid,\n                    name: body.name\n                }));                \n                localStorage.setItem( 'token', body.token );\n            }else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Oops...',\n                    text: body.msg,\n                })\n                console.log( body );\n\n            }\n\n        } catch ( err ) {\n            console.log( err );\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: err.msg,\n            })\n        }\n    }\n}\n\nexport const startChecking = () => {\n    return async( dispatch ) => {\n        try {\n            \n            const resp = await fetchToken( 'auth/renew' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( login({\n                    uid: body.uid,\n                    name: body.name\n                }));\n                localStorage.setItem( 'token', body.token );\n            }else {\n                dispatch( setCheckingFinish() );\n            }\n        } catch ( err ) {\n            console.log( err );\n            dispatch( setCheckingFinish() );\n\n        }\n    }\n}\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( logout() );\n        dispatch( logoutCleanPostsUser() );\n\n    }\n}\n\nexport const setCheckingFinish = () => ({\n    type: types.authCheckingFinish,\n});\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user,\n});\n\nconst logout = () => ({\n    type: types.authLogout,\n})\n","import React from 'react';\nimport RingLoader from 'react-spinners/RingLoader';\n\nexport const LoadingScreen = () => {\n    return (\n        <div className=\"loading__load-container\">\n            <RingLoader size={ 60 } color=\"#2D95EB\"/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { authStartLogin } from '../../actions/auth';\n\nexport const LoginScreen = () => {\n    \n    const dispatch = useDispatch();\n    const [ formValues, setFormValues ] = useState({\n        email: '',\n        password: '',\n    });\n    const { email, password } = formValues;\n    const [viewPass, setViewPass] = useState( false );\n\n    const handleOnChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [ target.name ]: target.value,\n        });\n    }\n\n    const handleTurnViewPass = () => {\n        setViewPass( !viewPass );\n    }\n\n    const handleOnSubmit = ( e ) => {\n        e.preventDefault();\n\n        if ( email.length < 2 || password.length < 7 ) {\n            return Swal.fire( 'Error', 'Asegurate de llenar todos los espacios', 'error' );\n        }\n\n        dispatch( authStartLogin( email, password ) );\n    }\n\n    return (\n        <div className=\"auth__auth-container\">\n            <div className=\"auth__auth-content\">\n                <div className=\"auth__auth-header\">\n                    <h2>Iniciar sesión</h2>\n                </div>\n                <div className=\"auth__auth-body\">\n                    <form \n                        className=\"form__form-group\"\n                        onSubmit={ handleOnSubmit }\n                    >\n                        <label className=\"form__form-label\">Correo:</label>\n                        <div className=\"form__form-group-icon\">\n                            <input \n                                className=\"form__form-control\"\n                                type=\"email\"\n                                autoComplete=\"false\"  \n                                name=\"email\"\n                                placeholder=\"\"\n                                value={ email }\n                                onChange={ handleOnChange }\n                            />\n                            <i className=\"fas fa-envelope form-icon\"></i>\n                        </div>\n                        <label className=\"form__form-label\">Contraseña:</label>\n                        <div className=\"form__form-group-icon\">\n                            <input \n                                className=\"form__form-control\"\n                                autoComplete=\"false\"  \n                                type={`${ viewPass ? 'text' : 'password'}`}\n                                name=\"password\"\n                                placeholder=\"\"\n                                value={ password }\n                                onChange={ handleOnChange }\n                            />\n                            <i className=\"fas fa-lock form-icon\"></i>\n                            {\n                                ( viewPass ) \n                                ? ( \n                                    <div className=\"form-icon-eye\">\n                                        <i \n                                            onClick={ handleTurnViewPass } \n                                            className=\"fas fa-eye-slash\">\n                                        </i>\n                                    </div> \n                                )\n                                : (\n                                    <div className=\"form-icon-eye\">\n                                        <i \n                                            onClick={ handleTurnViewPass } \n                                            className=\"fas fa-eye\"\n                                        ></i>\n                                    </div>\n                                )\n                            }\n                        </div>\n                        <Link to=\"/auth/register\" className=\"form__form-link\"><span>¿No tienes una cuenta? Registrate</span></Link>\n                        <button className=\"btn btn-primary btn-block\">Iniciar sesión</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { LoginScreen } from '../auth/LoginScreen'\r\n\r\nexport const LoginCheckAuth = ({ uid }) => {\r\n  return (\r\n    ( !!uid ) ?\r\n    (<Navigate to=\"/\" />)\r\n    :\r\n    (<LoginScreen />)\r\n  )\r\n}\r\n","import { emailValidator } from \"./emailValidator\";\n\n\nexport const formRegisterValidator = ( formValues ) => {\n    \n    if ( formValues.name.length < 2 ) {\n        return {\n            ok: false,\n            msg: 'Asegurate de llenar todos los espacios.',\n        }\n    }else if ( formValues.lastName.length < 2 ) {\n        return {\n            ok: false,\n            msg: 'Asegurate de llenar todos los espacios.',\n        }\n    }else if ( formValues.email.length < 2 ) {\n        return {\n            ok: false,\n            msg: 'Asegurate de llenar todos los espacios.',\n        }\n    }else if ( formValues.password.length < 2 ) {\n        return {\n            ok: false,\n            msg: 'Asegurate de llenar todos los espacios.',\n        }\n    }else if ( formValues.confirmPassword.length < 2 ) {\n        return {\n            ok: false,\n            msg: 'Asegurate de llenar todos los espacios.',\n        }\n    }else if ( !emailValidator( formValues.email ) ) {\n        return {\n            ok: false,\n            msg: 'El correo electronico no es valido.',\n        }\n    }else if ( formValues.password !== formValues.confirmPassword ) {\n        return {\n            ok: false,\n            msg: 'Las constraseñas deben coincidir.',\n        }\n    }else if ( formValues.password.length < 7 ) {\n        return {\n            ok: false,\n            msg: 'La constraseña debe tener al menos 7 caracteres .',\n        }\n    }else {\n        return {\n            ok: true\n        }\n    }\n}\n","\nexport const emailValidator = ( email ) => {\n    return  /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test( email );\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { startAuthRegister } from '../../actions/auth';\nimport { formRegisterValidator } from '../../helpers/formRegisterValidator';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const [ formValues, setFormValues ] = useState({\n        name: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n    });\n    const { name, lastName, email, password, confirmPassword } = formValues;\n    const [viewPass, setViewPass] = useState( false );\n    const [viewConfirmPass, setViewConfirmPass] = useState( false );\n\n    const handleOnChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [ target.name ]: target.value,\n        });\n    }\n\n    const handleOnSubmitRegister = async( e ) => {\n        e.preventDefault();\n\n        const validation = await formRegisterValidator( formValues );\n\n        if ( !validation.ok ) {\n            return Swal.fire( 'Error', validation.msg, 'error' );\n        }\n\n        dispatch( startAuthRegister({ username: name, 'last_name':lastName, email, password, }) );\n    }\n\n    const handleTurnViewPass = () => {\n        setViewPass( !viewPass );\n    }\n    const handleTurnViewConfirmPass = () => {\n        setViewConfirmPass( !viewConfirmPass );\n    }\n\n    return (\n        <div className=\"auth__auth-container\">\n            <div className=\"auth__auth-content\">\n                <div className=\"auth__auth-header\">\n                    <h2>Registrarse</h2>\n                </div>\n                <div className=\"auth__auth-body\">\n                    <form \n                        className=\"form__form-group\"\n                        onSubmit={ handleOnSubmitRegister }\n                    >\n                        <label className=\"form__form-label\">Nombre:</label>\n                        <div className=\"form__form-group-icon\">\n                            <input \n                                className=\"form__form-control\"\n                                type=\"text\"\n                                autoComplete=\"false\"  \n                                name=\"name\"\n                                placeholder=\"\"\n                                value={ name }\n                                onChange={ handleOnChange }\n                            />\n                            <i className=\"fas fa-user form-icon\"></i>\n                        </div>\n\n                        <label className=\"form__form-label\">Apellido:</label>\n                        <div className=\"form__form-group-icon\">\n                            <input \n                                className=\"form__form-control\"\n                                type=\"text\"\n                                autoComplete=\"false\"  \n                                name=\"lastName\"\n                                placeholder=\"\"\n                                value={ lastName }\n                                onChange={ handleOnChange }\n                            />\n                            <i className=\"fas fa-user form-icon\"></i>\n                        </div>\n\n                        <label className=\"form__form-label\">Correo:</label>\n                        <div className=\"form__form-group-icon\">\n                            <input \n                                className=\"form__form-control\"\n                                type=\"email\"\n                                autoComplete=\"false\"  \n                                name=\"email\"\n                                placeholder=\"\"\n                                value={ email }\n                                onChange={ handleOnChange }\n                            />\n                            <i className=\"fas fa-envelope form-icon\"></i>\n                        </div>\n\n                        <label className=\"form__form-label\">Contraseña:</label>\n                        <div className=\"form__form-group-icon\">\n                            <input \n                                className=\"form__form-control\"\n                                autoComplete=\"false\"  \n                                type={`${ viewPass ? 'text' : 'password'}`}\n                                name=\"password\"\n                                placeholder=\"\"\n                                value={ password }\n                                onChange={ handleOnChange }\n                            />\n                            <i className=\"fas fa-lock form-icon\"></i>\n                            {\n                                ( viewPass ) \n                                ? ( \n                                    <div className=\"form-icon-eye\">\n                                        <i \n                                            onClick={ handleTurnViewPass } \n                                            className=\"fas fa-eye-slash\">\n                                        </i>\n                                    </div> \n                                )\n                                : (\n                                    <div className=\"form-icon-eye\">\n                                        <i \n                                            onClick={ handleTurnViewPass } \n                                            className=\"fas fa-eye\"\n                                        ></i>\n                                    </div>\n                                )\n                            }\n                        </div>\n\n                        <label className=\"form__form-label\">Confirmar contraseña:</label>\n                        <div className=\"form__form-group-icon\">\n                            <input \n                                className=\"form__form-control\"\n                                autoComplete=\"false\"  \n                                type={`${ viewConfirmPass ? 'text' : 'password'}`}\n                                name=\"confirmPassword\"\n                                placeholder=\"\"\n                                value={ confirmPassword }\n                                onChange={ handleOnChange }\n                            />\n                            <i className=\"fas fa-lock form-icon\"></i>\n                            {\n                                ( viewConfirmPass ) \n                                ? ( <i onClick={ handleTurnViewConfirmPass } className=\"fas fa-eye-slash form-icon-eye\"></i> )\n                                : ( <i onClick={ handleTurnViewConfirmPass } className=\"fas fa-eye form-icon-eye\"></i> )\n                            }\n                        </div>\n                        <Link to=\"/auth/login\" className=\"form__form-link\"><span>¿Ya tienes una cuenta? Inicia sesión</span></Link>\n                        <button className=\"btn btn-primary btn-block\">Registrarse</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { RegisterScreen } from '../auth/RegisterScreen'\r\n\r\nexport const RegisterCheckAuth = ({ uid }) => {\r\n  return (\r\n    ( !!uid ) ?\r\n    (<Navigate to=\"/\" />)\r\n    :\r\n    (<RegisterScreen />)\r\n  )\r\n}\r\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Swal from 'sweetalert2';\nimport { postSetActive, startUpdatePost } from '../../../../actions/post';\n\nconst initState = {\n    title: '',\n    body: '',\n}\n\nexport const CreatePostButton = () => {\n\n    const dispatch = useDispatch();\n    const { activePost } = useSelector(state => state.post);\n    const { disableUpdate } = useSelector(state => state.ui);\n\n    const handleOnCreatePostButton = async() => {\n        \n        if ( !disableUpdate ) {\n            const result = await Swal.fire({\n                icon: 'warning',\n                title: '¿Seguro que quieres cambiar de documento?',\n                text: 'Sí cambias de documento sin guardar se perderán los cambios',\n                showDenyButton: true,\n                showCancelButton: true,\n                confirmButtonText: `Guardar`,\n                denyButtonText: `No guardar`,\n                cancelButtonText: `cancelar`,\n            });\n            \n            console.log( result );\n            \n            if (result.isConfirmed) {\n                dispatch( startUpdatePost( activePost.post ) );\n                dispatch( postSetActive( true, initState ));\n            } else if (result.isDenied) {\n                // Swal.fire('Changes are not saved', '', 'info')\n                dispatch( postSetActive( true, initState ));\n            }\n        }else {\n            dispatch( postSetActive( true, initState ));\n            \n        }\n       \n    }\n    \n    return (\n        <div \n            className=\"aside__aside-add-post\"\n            onClick={ handleOnCreatePostButton }\n        >\n            <i className=\"fas fa-plus-circle fa-7x\"></i>\n            <span>Crear publicación</span>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogout } from '../../../../actions/auth';\nimport { startUpdatePost } from '../../../../actions/post';\n\n\n\nexport const LogoutButton = () => {\n\n    const dispatch = useDispatch();\n    const { disableUpdate } = useSelector(state => state.ui);\n    const { activePost } = useSelector(state => state.post);\n\n    const handleLogout = async() => {\n\n        if ( !disableUpdate ) {\n            const result = await Swal.fire({\n                icon: 'warning',\n                title: '¿Seguro que quieres salir?',\n                text: 'Sí sales sin guardar se perderán los cambios',\n                showDenyButton: true,\n                showCancelButton: true,\n                confirmButtonText: `Guardar`,\n                denyButtonText: `No guardar`,\n                cancelButtonText: `cancelar`,\n            });\n\n            if (result.isConfirmed) {\n                dispatch( startUpdatePost( activePost.post ) );\n            } else if (result.isDenied) {\n                dispatch( startLogout() );\n            }\n        }else {\n            dispatch( startLogout() );\n        }\n    }\n\n    return (\n        <button onClick={ handleLogout } className=\"btn btn-danger\" >\n            <span>Salir <i className=\"fas fa-sign-out-alt\"></i></span>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Swal from 'sweetalert2';\nimport moment from 'moment';\nimport 'moment/locale/es-mx';\nimport { postSetActive, startUpdatePost } from '../../../../actions/post';\n\n\nmoment.locale( 'es-mx' );\n\nexport const MyPost = ({ id, title, date, body, imageUrl, user_id }) => {\n\n    const dispatch = useDispatch();\n    const { disableUpdate } = useSelector(state => state.ui);\n    const { activePost } = useSelector(state => state.post);\n\n    const handleActivePost = async() => {\n\n        if ( !disableUpdate ) {\n            if ( id !== activePost.post.id ) {\n                const result = await Swal.fire({\n                    icon: 'warning',\n                    title: '¿Seguro que quieres cambiar de documento?',\n                    text: 'Sí cambias de documento sin guardar se perderán los cambios',\n                    showDenyButton: true,\n                    showCancelButton: true,\n                    confirmButtonText: `Guardar`,\n                    denyButtonText: `No guardar`,\n                    cancelButtonText: `cancelar`,\n                });\n                \n                console.log( result );\n                \n                if (result.isConfirmed) {\n                    dispatch( startUpdatePost( activePost.post ) );\n                } else if (result.isDenied) {\n                    // Swal.fire('Changes are not saved', '', 'info')\n                    dispatch( postSetActive(\n                        false,\n                        { id, title, date, body, imageUrl, user_id }\n                    ));\n                }\n            }\n        }else {\n            dispatch( postSetActive(\n                false,\n                { id, title, date, body, imageUrl, user_id }\n            ));\n        }\n\n    }\n\n    return (\n        <div \n            className=\"aside__post-container\"\n            onClick={ handleActivePost }\n        >\n            <div className=\"aside__post-title\">\n                <span>{ title }</span>\n            </div>\n            <div className=\"aside__post-date\">\n                <span>{ moment( Number(date) ).format( 'llll' ) }</span>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { MyPost } from './MyPost';\n\nexport const Posts = () => {\n\n    const { posts } = useSelector(state => state.post)\n\n    return (\n        <div className=\"aside__aside-myPosts\">\n            {\n                posts.map(( post ) => (\n                    <MyPost \n                        key={ post.id }\n                        { ...post }\n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { startGetPosts } from '../../../actions/post';\nimport { uiHideAsaid } from '../../../actions/ui';\nimport { CreatePostButton } from './buttons/CreatePostButton';\nimport { LogoutButton } from './buttons/LogoutButton';\nimport { Posts } from './myPost/Posts';\n\nexport const Aside = () => {\n\n    const { asideHidden } = useSelector( state => state.ui );\n    const { name } = useSelector( state => state.auth );\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch( startGetPosts() );\n    }, [ dispatch ]);\n\n    const handleAsideToggleg = () => {\n        dispatch( uiHideAsaid() );\n    }\n\n    return (\n        <aside className={`aside__aside-container ${ asideHidden && 'asideHidden' }`}>\n            <div className=\"aside__aside-toggle-container\">\n                <div \n                    className={`aside__toggle ${ asideHidden && 'asideHiddenToggle' }`}\n                    onClick={ handleAsideToggleg }    \n                >\n                    {\n                        ( asideHidden ) \n                            ? <i className=\"fas fa-arrow-right\"></i>\n                            : <i className=\"fas fa-arrow-left\"></i>\n                    }\n                </div>\n            </div>\n            <div className=\"aside__aside-user\">\n                <span><i className=\"fas fa-user\"></i> { ` ${ name }` }</span>\n                <LogoutButton />\n            </div>\n            <CreatePostButton />\n            <div className=\"aside__aside-myPosts-span\">\n                <span>Mis publicaciones</span>\n            </div>\n            <Posts />\n        </aside>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startDeletePost } from '../../../actions/post';\n\nexport const DeleteFab = () => {\n\n    const dispatch = useDispatch();\n    const { activePost } = useSelector(state => state.post)\n\n\n    const handleOnDeletePost = async() => {\n\n        const result = await Swal.fire({\n            icon: 'warning',\n            title: '¿Seguro que quieres borrar el documento?',\n            text: 'Si borras el documento no se podrá recuperar',\n            showCancelButton: true,\n            confirmButtonText: `Borrar`,\n            cancelButtonText: `cancelar`,\n        });\n\n        if (result.isConfirmed) {\n            dispatch( startDeletePost( activePost.post.id ) );\n        }\n\n    }\n\n    return (\n        <>\n            <button \n                className=\"btn btn-danger blogCreator-blog-fab-delete\"\n                onClick={ handleOnDeletePost }\n            >\n                <span>Eliminar <i className=\"fas fa-trash\"></i></span>\n            </button>\n        </>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startSavePost } from '../../../actions/post';\n\nexport const Savebutton = () => {\n\n    const dispatch = useDispatch();\n    const { disableUpdate } = useSelector( state => state.ui );\n    const { activePost } = useSelector( state => state.post );\n    \n    const handleOnSavePost = () => {\n    \n        dispatch( startSavePost( activePost.post ) );\n\n    }\n\n\n    return (\n        <button \n            className=\"navbar__nav-button\"\n            disabled={ disableUpdate }\n            onClick={ handleOnSavePost }\n        >\n            <i className=\"fas fa-save fa-2x\"></i>\n            <span>Guardar post</span>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { startUploadImg } from '../../../actions/post';\n\nexport const FileUploadbutton = () => {\n\n    const dispatch = useDispatch();\n    const { activePost } = useSelector(state => state.post);\n    \n\n    const handleOnClickPictureBotton = () => {\n        document.querySelector( '#fileSelector' ).click();\n    }\n\n    const handleFileSelectorChange = ({ target }) => {\n        const file = target.files[0];\n        \n        if ( activePost.isNew ) {\n            let imageUrl = localStorage.getItem('url_img') || null;\n            dispatch( startUploadImg( file, imageUrl ) );\n            \n        }else {\n            dispatch( startUploadImg( file ) );\n        }\n\n        // setFile( file );\n    }\n\n    return (\n        <>\n            <input \n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"image\"\n                style={{ display: 'none' }}\n                onChange={ handleFileSelectorChange }\n            />\n            <button \n                className=\"navbar__nav-button\"\n                onClick={ handleOnClickPictureBotton }\n            >\n                <i className=\"fas fa-upload fa-2x\"></i>\n                <span>Subir imagen</span>\n            </button>\n        </>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startUpdatePost } from '../../../actions/post';\n\nexport const UpdateButton = () => {\n\n    const { activePost } = useSelector(state => state.post);\n    const { disableUpdate } = useSelector( state => state.ui );\n    const dispatch = useDispatch();\n\n    const handleOnUpdate = () => {\n        dispatch( startUpdatePost( activePost.post ) );\n    }\n\n    return (\n        <button \n            className=\"navbar__nav-button\"\n            onClick={ handleOnUpdate }\n            disabled={ disableUpdate }\n        >\n            <i className=\"fas fa-pen-fancy fa-2x\"></i>\n            <span>Actualizar post</span>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nexport const ShowImgButton = () => {\n\n    const { activePost } = useSelector(state => state.post)\n\n    const handleOnShowImg = () => {\n        Swal.fire({\n            imageUrl: activePost.post.imageUrl,\n            imageWidth: '90%',\n            showConfirmButton: false,\n            imageAlt: 'Custom image',\n        });\n    }\n\n    return (\n        <button\n            className=\"btn btn-primary btn-circle\"\n            onClick={ handleOnShowImg }\n        >\n            <i className=\"fas fa-image fa-2x\" ></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Swal from 'sweetalert2'\n\nexport const PreviewButton = () => {\n\n    const { activePost } = useSelector(state => state.post);\n\n    const handleOnPreview = () => {\n        Swal.fire({\n            imageUrl: activePost.post.imageUrl,\n            // imageHeight: 1500,\n            width: 800,\n            showConfirmButton: false,\n            html: ` <div class=\"modal-html\"> <h1>${ activePost.post.title }</h1> ${ activePost.post.body } </div> ` ,\n            imageAlt: 'A tall image',\n        });\n    }\n\n    return (\n        <button\n            className=\"btn btn-primary btn-circle\"\n            onClick={ handleOnPreview }\n        >\n            <i className=\"fas fa-eye fa-2x\" ></i>\n        </button>\n    )\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { DeleteFab } from './buttons/DeleteFab';\nimport { Savebutton } from './buttons/Savebutton';\nimport { FileUploadbutton } from './buttons/FileUploadbutton';\nimport { UpdateButton } from './buttons/UpdateButton';\nimport { postSetActive } from '../../actions/post';\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { setDisableUpdateButton, setUnDisableUpdateButton } from '../../actions/ui';\nimport { ShowImgButton } from './buttons/ShowImgButton';\nimport { PreviewButton } from './buttons/PreviewButton';\n\n\n\n\nexport const BlogEditor = () => {\n\n    const dispatch = useDispatch();\n    const { asideHidden } = useSelector( state => state.ui );\n    const { activePost } = useSelector( state => state.post );\n    const { post } = activePost; \n    const [ postDataValues, setPostDataValues ] = useState( post );\n    const { title, body, imageUrl} = postDataValues;\n\n    const refPostId = useRef( post.id );\n    const refPostIsNew = useRef( activePost.isNew );\n\n    useEffect(() => {\n        if ( post.id !== refPostId.current ) {\n            setPostDataValues( post );\n            refPostId.current = post.id;\n            dispatch( setDisableUpdateButton() );\n        }\n    }, [ post, refPostId, setPostDataValues, dispatch ]);\n    \n    useEffect(() => {\n        if ( activePost.isNew === refPostIsNew.current ) {\n            dispatch( postSetActive(\n                activePost.isNew,\n                { ...postDataValues }\n            ));\n        }\n        refPostIsNew.current = activePost.isNew;\n        \n    }, [ dispatch, postDataValues, activePost.isNew]);\n    \n\n    const handleOnChangePostData = ( { target } ) => {\n\n        setPostDataValues({\n            ...postDataValues,\n            [target.name]: target.value\n        })\n        dispatch( setUnDisableUpdateButton() );\n            \n    }\n\n    const handleChangeCK =  ( e, editor ) => {\n\n        if ( JSON.stringify( post.body ) !== JSON.stringify( editor.getData() ) ) {\n            setPostDataValues({\n                ...postDataValues,\n                body: editor.getData()\n            })\n            dispatch( setUnDisableUpdateButton() );\n            \n        }\n    };\n\n    return (\n        <div className={`blogEditor__blog-container ${ !asideHidden && 'asideHide'}`}>\n            <div className=\"blogEditor__blog-navEditor\">\n                <div className=\"blogCreator-blog-nav-buttons\">\n                    <FileUploadbutton />\n                    {\n                        activePost.isNew ? <Savebutton />\n                        : <UpdateButton />\n                    }\n                    \n                </div>\n            </div>\n            <div className=\"blogEditor__blog-fab\">\n                <div className=\"blogEditor__blog-img\">\n                    { !!imageUrl && <ShowImgButton /> }\n                </div>\n                <div className=\"blogEditor__blog-preview\">\n                { !activePost.isNew && <PreviewButton /> }\n                </div>\n            </div>\n            <div className=\"blogEditor__blog-editor\">\n                <div className=\"blogEditor__blog-editor-container\">\n                    <div className=\"blogEditor__blog-editor-title\">\n                        <input \n                            type=\"text\"\n                            placeholder=\"Some awesome title!\"\n                            value={ title }\n                            name=\"title\"\n                            onChange={ handleOnChangePostData }\n                        />\n                    </div>\n                    <div className=\"blogEditor__blog-editor-body\" >\n                        <CKEditor \n                            editor={ ClassicEditor }\n                            className=\"editor\"\n                            data={ body }\n                            onChange={ handleChangeCK }\n                        />\n                    </div>\n                    { !activePost.isNew && <DeleteFab /> }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nexport const NoContent = () => {\n\n    const { asideHidden } = useSelector( state => state.ui );\n\n    return (\n        <div className={`blogCreator__blog-no-content-container ${ !asideHidden && 'asideIsHidden' }`}>\n            <i className=\"fas fa-pencil-alt fa-7x\"></i>\n            <span className=\"blogCreator__blog-no-content-title\">Selecciona o crea un post!</span>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Aside } from '../ui/aside/Aside';\nimport { BlogEditor } from './BlogEditor';\nimport { NoContent } from './NoContent';\n\nexport const BlogCreator = () => {\n\n    const { activePost } = useSelector( state => state.post );\n\n    return (\n        <div className=\"blogCreatpr__blog\">\n            <Aside />\n            {\n                ( activePost ) \n                ? <BlogEditor />\n                : <NoContent />\n            }\n        </div>\n    )\n}\n","import React from 'react'\r\nimport { BlogCreator } from '../blog-creator/BlogCreator'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport const BlogEditorCheckAuth = ({ uid }) => {\r\n  return (\r\n    ( !!uid  ) ? \r\n        <BlogCreator/>\r\n        :\r\n        <Navigate to=\"/auth/login\" />\r\n  )\r\n}\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter,\n    Routes,\n    Route,\n    Navigate,\n} from \"react-router-dom\";\nimport { setCheckingFinish, startChecking } from '../../actions/auth';\nimport { LoadingScreen } from '../ui/loading/LoadingScreen';\nimport { LoginCheckAuth } from './LoginCheckAuth';\nimport { RegisterCheckAuth } from './RegisterCheckAuth';\nimport { BlogEditorCheckAuth } from './BlogEditorCheckAuth';\n\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token') || null;\n        if ( token ) {\n            dispatch( startChecking() );\n        }else {\n            dispatch( setCheckingFinish() )\n        }\n\n    }, [ dispatch, uid ])\n\n    if ( checking ) {\n        return (\n            <LoadingScreen />\n        )\n    }\n\n    return (\n        <BrowserRouter>\n            <main>\n                <Routes>\n                    <Route  \n                        path=\"auth/login\" \n                        element={ <LoginCheckAuth uid={ uid }/> }\n                    />\n                    <Route \n                        path=\"auth/register\" \n                        element={ <RegisterCheckAuth uid={ uid }/>}\n                    />\n                    <Route \n                        path=\"blog\" \n                        element={ <BlogEditorCheckAuth uid={ uid }/> }\n                    />\n                    <Route path=\"*\" element={ <Navigate to='/blog'/> } />\n                </Routes>\n\n            </main>\n        </BrowserRouter>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\n// import { BlogCreator } from './components/blog-creator/BlogCreator';\n// import { AppRouter } from './components/router/AppRouter';\n// import { Aside } from './components/ui/aside/Aside';\n\nimport './styles/styles.scss';\nimport { AppRouter } from './components/router/AppRouter';\n\nexport const BlogCreator = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BlogCreator } from './BlogCreator';\n\nReactDOM.render(\n    <BlogCreator />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}